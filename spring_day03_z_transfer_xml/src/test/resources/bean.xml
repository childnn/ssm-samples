<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd
	            http://www.springframework.org/schema/aop
        	    http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--引入 数据库连接信息-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--ioc : di-->
    <!--service实现类-->
    <bean id="accountServiceImpl" class="org.anonymous.service.serviceimpl.AccountServiceImpl">
        <!--set 方式: name : set 方法, ref 引入 ioc 中 dao-->
        <property name="accountDao" ref="accountDao"/>
        <property name="dataSource" ref="druid"/>
    </bean>
    <!--dao-->
    <bean id="accountDao" class="org.anonymous.dao.daoimpl.AccountDaoImpl">
        <!--set 方式: 注入 jdbcTemplate-->
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <!--jdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--注入 连接池-->
        <constructor-arg name="dataSource" ref="druid"/>
    </bean>
    <!--druid: 简单属性用 value 赋值-->
    <bean id="druid" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
   <!-- <bean id="druid" class="com.alibaba.druid.pool.DruidDataSource"
            p:driverClassName="${jdbc.driver}"
            p:url="${jdbc.url}"
            p:username="${jdbc.username}"
            p:password="${jdbc.password}"/>-->

<!--AccountServiceImpl0: aop + 事务-->
    <bean id="accountServiceImpl0" class="org.anonymous.service.serviceimpl.AccountServiceImpl0">
        <!--di-->
        <property name="accountDao" ref="accountDao"/>
    </bean>
    <!--切面类- ioc : 四大通知-->
    <bean id="aspect" class="org.anonymous.aspect.TransactionManager">
        <!--di-->
        <property name="dataSource" ref="druid"/>
    </bean>

    <!--aop 配置-->
    <aop:config>
        <!--切入点: 这里 org.anonymous 包下 有多个 transfer 方法, 必须指定好 类名-->
        <aop:pointcut id="pt" expression="execution(* org.anonymous..AccountServiceImpl0.transfer(..))"/>
        <!--通知-->
        <!--指定 切面类-->
        <aop:aspect ref="aspect">
            <aop:before method="openTransaction" pointcut-ref="pt"/>
            <aop:after-returning method="commitTransaction" pointcut-ref="pt"/>
            <aop:after-throwing method="transactionException" pointcut-ref="pt"/>
            <aop:after method="closeTransaction" pointcut-ref="pt"/>
        </aop:aspect>
    </aop:config>

</beans>